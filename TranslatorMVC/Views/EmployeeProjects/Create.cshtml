@* @model TranslatorMVC.Models.EmployeeProject

@{
    ViewData["Title"] = "Create Assignment";

}

<h1>Create Assignment</h1>

<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">

                <input type="hidden" asp-for="ProjectID" />
                <input type="hidden" asp-for="Project" />
                <input type="hidden" asp-for="Employee" />

                <label asp-for="EmployeeID" class="control-label">Employee Name</label>
                <select asp-for="EmployeeID" asp-items="ViewBag.EmployeeID" class="form-control mb-2"></select>
                <span asp-validation-for="EmployeeID" class="text-danger"></span>
            </div>
 
            <div class="form-group">
                <label asp-for="Assigned" class="control-label">Assigned words</label>
                <input asp-for="Assigned" class="form-control mb-2" />
                <span asp-validation-for="Assigned" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary mb-2" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
} *@

    


@{
    ViewData["Title"] = "Shift Assignment";
}

<h2>@ViewData["Title"]</h2>

<div>
    <label for="selectedDate">Select Date:</label>
    <input type="date" id="selectedDate">
    <button id="fetchShifts">Fetch Shifts</button>
</div>

<div id="shiftList"></div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#fetchShifts").click(function () {
                var selectedDate = $("#selectedDate").val();
                $.ajax({
                    url: '@Url.Action("GetShiftsForDate", "EmployeeProjects")',
                    type: 'POST',
                    data: { selectedDate: selectedDate },
                    success: function (data) {
                        var shiftList = $("#shiftList");
                        shiftList.empty();

                        if (data.length === 0) {
                            shiftList.append("<p>No shifts available for the selected date.</p>");
                        } else {
                            data.forEach(function (item) {
                                var employeeRow = `<div class="employee-row">
                                                            <p>Employee: ${item.Employee.Emp_Name}</p>
                                                            <p>Remaining Capacity: ${item.RemainingCapacity}</p>
                                                            <button class="assign-btn" data-shift-id="${item.Shift.ShiftID}" data-employee-id="${item.Employee.EmployeeID}" data-remaining-capacity="${item.RemainingCapacity}">Assign Words</button>
                                                            <div class="assign-input" style="display:none;">
                                                                <input type="number" class="form-control assign-words" placeholder="Enter number of words">
                                                                <button class="submit-assign btn btn-success">Submit</button>
                                                            </div>
                                                        </div>`;
                                shiftList.append(employeeRow);
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching shifts:", status, error);
                        alert("An error occurred while fetching shifts. Please try again.");
                    }
                });
            });

            $(document).on("click", ".assign-btn", function () {
                var remainingCapacity = $(this).data("remaining-capacity");
                var assignInput = $(this).siblings(".assign-input");

                assignInput.show();

                assignInput.find(".submit-assign").click(function () {
                    var assignedWords = parseInt(assignInput.find(".assign-words").val());
                    if (assignedWords <= remainingCapacity) {
                        $.ajax({
                            url: '@Url.Action("AssignWords", "EmployeeProjects")',
                            type: 'POST',
                            data: {
                                shiftId: $(this).parent().siblings(".assign-btn").data("shift-id"),
                                employeeId: $(this).parent().siblings(".assign-btn").data("employee-id"),
                                assignedWords: assignedWords
                            },
                            success: function () {
                                alert("Words assigned successfully!");
                                location.reload();  // Reload to refresh the capacity
                            },
                            error: function (xhr, status, error) {
                                console.error("Error assigning words:", status, error);
                                alert("An error occurred while assigning words. Please try again.");
                            }
                        });
                    } else {
                        alert("Assigned words exceed the remaining capacity!");
                    }
                });
            });
        });
    </script>
}
